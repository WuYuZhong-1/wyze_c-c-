auto : 使用 auto 关键字，让编译器在编译过程中自动推导出该变量的类型

用法：
    1. 作为完整的数据类型
                    int a = 11;
                    auto b = a;     //auto 为 int
    2. 作为“半个数据类型”
                    int a = 11;
                    auto *b = &a;   // b 的数据类型为 int*  所以 auto 为 int
                    auto& c = a;    // 这时 auto 为 int
                    auto d = c;     // 这里 auto 为 int。 当 = 右边的表达式为一个 引用类型，auto 会抛弃引用，直接推导出原始类型
    3. auto 与 const 的使用
                    const int a = 10;
                    auto b = a;     //这时 auto 会抛弃 const ， 为 int
                    auto& c = a;    // 这是 auto 为 const int
                    auto d = c;     // 抛弃引用直接推导出 原始类型 auto 为 int
限制：
    1. 不能作为函数参数使用，(函数参数，声明函数时不会对参数进行赋值，只有在调用时才会赋值，这与auto 在定义就赋值二异性)
    2. 不能用于类的非静态成员变量。(类的成员变量在运行时才能创建，编译器不能预知)
    3. 不能用于定义数组
    4. 不能作用于模板参数
应用：
    1. stl 迭代器的的自动推导
    2. 范型编程

-----------------------------------------------------------------------------------------------------------

decltype: 推导表达式类型， 可以不对该变量进行赋值

注意事项：
    decltype(exp)  推导的过程中 exp 表达式的返回值不能为 void。

用法：
    